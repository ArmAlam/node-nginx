name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: ./services/user-service
        run: yarn install

      - name: Run tests
        working-directory: ./services/user-service
        run: yarn test

  build-and-deploy:
    name: Build, Push to Docker Hub, and Deploy
    if: github.event_name == 'push' # Only run on actual push to main
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ========================================== push to Docker and Deploy to server ==========================================
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push Docker image
      #   run: |
      #     docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest ./services/user-service
      #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest

      # - name: Deploy to server via SSH
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     script: |
      #       cd /path/to/project
      #       git pull origin main
      #       docker compose down
      #       docker compose pull
      #       docker compose up -d
